import sys
import pygame
import pygame.gfxdraw
from pygame.constants import QUIT
from src.bowyer_watson import BowyerWatson
from src.room_generation import generate_rooms




class Demo():
    """
    Creates three different room sets and triangulations for
    each of the sets.
    Then demonstrates the way a set is generated by drawing
    generated squares and triangles with pygame.
    """
    def __init__(self,width,height,tile_size):
        """_summary_

        Args:
            width (_type_): _description_
            height (_type_): _description_
            tile_size (_type_): _description_
        """
        pygame.init()
        self.width = width
        self.height = height

        self.room_and_centers1 = generate_rooms(20,width,height,32)
        self.bowyer_watson1 = BowyerWatson(self.room_and_centers1[1],width,height)
        self.bowyer_watson1.run()

        self.room_and_centers2 = generate_rooms(200,width,height,tile_size)
        self.bowyer_watson2 = BowyerWatson(self.room_and_centers2[1],width,height)
        self.bowyer_watson2.run()

        self.room_and_centers3 = generate_rooms(2000,width,height,tile_size)
        self.bowyer_watson3 = BowyerWatson(self.room_and_centers3[1],width,height)
        self.bowyer_watson3.run()
        self.screen = pygame.display.set_mode((self.width,self.height))

    def run(self):
        """_summary_
        """
        background = pygame.Surface((self.width,self.height))
        background.fill('black')
        clock = pygame.time.Clock()
        self.timer = 0

        while True:
            for event in pygame.event.get():
                if event.type == QUIT:
                    print("bye bye")
                    pygame.quit()
                    sys.exit()
            self.screen.blit(background,(0,0))
            if self.timer < 15:
                self.draw_demo1()
            elif self.timer < 30:
                self.draw_demo2()
            else:
                self.draw_demo3()
            self.timer += 1/60
            clock.tick(60)
            pygame.display.flip()

    def draw_demo1(self):
        """_summary_
        """
        if self.timer < 15:
            for room in self.room_and_centers1[0]:
                room.draw(self.screen,'blue')
            if self.timer >= 5:
                for triangle in self.bowyer_watson1.triangulation:
                    if self.timer >= 10:
                        triangle.draw(self.screen,'red', 1)
                    else:
                        triangle.draw(self.screen,'red',0)

    def draw_demo2(self):
        """_summary_
        """
        for room in self.room_and_centers2[0]:
            room.draw(self.screen,'blue')

        if self.timer>=20:
            for triangle in self.bowyer_watson2.triangulation:
                triangle.draw(self.screen,'red',0)

    def draw_demo3(self):
        """_summary_
        """
        for room in self.room_and_centers3[0]:
            room.draw(self.screen,'blue')
        if self.timer >= 35:
            for triangle in self.bowyer_watson3.triangulation:
                triangle.draw(self.screen,'red',0)

